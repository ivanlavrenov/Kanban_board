{"version":3,"sources":["components/Preview/Preview.js","components/AddBoard/AddBoard.js","components/BoardList/BoardList.js","components/Card/Card.js","components/AddCard/AddCard.js","components/List/List.js","components/Modal/Modal.js","components/Board/Board.js","components/Main/Main.js","index.js"],"names":["Preview","props","path","timeId","to","onClick","e","fromList","currentTarget","id","localStorage","setItem","boardText","className","activeClassName","AddBoard","state","editing","event","preventDefault","this","boardInput","value","trim","listNumber","formNum","onAdd","setState","onSubmit","type","placeholder","ref","input","setEditing","href","React","Component","BoardList","previews","map","preview","index","key","Card","taskText","draggable","onDragStart","AddCard","textInput","List","cards","card","onDragOver","onDrop","Modal","getItem","Board","dragInfo","taskId","JSON","stringify","listNum","droppedTask","rawLS","parsedLS","parse","parsedDragInfo","cardsArray","taskCard","find","indexOfCard","findIndex","splice","push","parseInt","lists","title","newTask","Date","valueOf","list","addTask","basename","component","Main","boards","boardTask","boardList","addTaskCard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.657420da.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Preview.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Preview( props ) {\r\n\r\nlet saveId = ( e, fromList ) => {\r\n   const cardText = {\r\n      taskId: e.currentTarget.id,\r\n      fromList: fromList\r\n    }\r\n\r\n   localStorage.setItem('cardText', props.boardText);\r\n  }\r\n\r\n\r\nconst path = \"/board/\" + props.timeId;\r\n\r\n  return (\r\n    <NavLink to={path} onClick={saveId} className=\"preview\" activeClassName=\"active\">\r\n      <div className=\"card-text\">{props.boardText}</div>\r\n    </NavLink>\r\n  ) \r\n};","import React from 'react';\r\nimport './AddBoard.css';\r\n\r\n\r\n\r\nexport default class AddBoard extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {\r\n      editing: false\r\n    }\r\n  }\r\n\r\n  onSubmit( event ) {\r\n    event.preventDefault();\r\n    const boardText = this.boardInput.value.trim();\r\n    const listNumber = this.props.formNum;\r\n\r\n    if ( boardText && this.props.onAdd ) {\r\n      this.props.onAdd( boardText, listNumber );\r\n    }\r\n    this.boardInput.value = '';\r\n  }\r\n\r\n setEditing( editing ) {\r\n    this.setState({\r\n      editing\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.editing) {\r\n      return (\r\n        <div className=\"open-add-button\" onClick={() => this.setEditing(true)}>\r\n          <div className=\"main-button\" href=\"#\">\r\n             <p>Новая доска</p>\r\n          </div>\r\n        </div>  \r\n        ); \r\n    }\r\n\r\n      return (\r\n        <form className=\"boardPreview\" onSubmit={(e) => this.onSubmit(e)}>\r\n            <div className=\"board-add-button\">\r\n\t\t\t\t<p className=\"board-add-button-text\">Новая доска</p>\r\n\t\t    </div>\r\n          <input type=\"text\" placeholder=\"Введите название доски\" className=\"add-board-input\" ref={input => this.boardInput = input} />\r\n          <div className=\"buttons-block\">\r\n            <button className=\"button add-button\">Сохранить</button>\r\n            <button className=\"button cancel-button\" onClick={() => this.setEditing(false)}>Отмена</button>\r\n          </div>\r\n        </form>\r\n      );\r\n  }\r\n}","import React from 'react';\r\nimport Preview from '../Preview/Preview.js';\r\nimport Main from '../Main/Main.js';\r\nimport AddBoard from '../AddBoard/AddBoard.js';\r\n\r\n\r\nexport default class BoardList extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n  }\r\n\r\n   \r\n  render() {\r\n    const previews = this.props.previews.map((preview, index) => {\r\n      return ( \r\n        <li key={index}>\r\n          <Preview {...preview } />\r\n        </li>\r\n      );\r\n    })\r\n      \r\n    return (\r\n      <div>\r\n        <AddBoard formNum={this.props.id} onAdd={this.props.onAdd} />\r\n        <ul className=\"board_list\">\r\n          { previews }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Card( props ) {\r\n\r\nlet saveId = ( e, fromList ) => {\r\n   const cardText = {\r\n      taskId: e.currentTarget.id,\r\n      fromList: fromList\r\n    }\r\n\r\n\t localStorage.setItem('cardText', props.taskText);\r\n\t}\r\n\r\n\r\nconst path = \"/modal/\" + props.timeId;\r\n\r\n  return (   \r\n        <NavLink to={path} onClick={saveId} activeClassName=\"active\" className=\"task-card\" draggable=\"true\" id={[props.timeId]} onDragStart={props.onDragStart}>\r\n      \t\t<div className=\"card-text\">{props.taskText}</div>\r\n        </NavLink>\r\n  ) \r\n};","import React from 'react';\r\nimport styles from './AddCard.css';\r\n\r\n\r\n\r\nexport default class AddCard extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {\r\n      editing: false\r\n    }\r\n  }\r\n\r\n  onSubmit( event ) {\r\n    event.preventDefault();\r\n    const taskText = this.textInput.value.trim();\r\n    const listNumber = this.props.formNum;\r\n\r\n    if ( taskText && this.props.onAdd ) {\r\n      this.props.onAdd( taskText, listNumber );\r\n    }\r\n    this.textInput.value = '';\r\n  }\r\n\r\n setEditing( editing ) {\r\n    this.setState({\r\n      editing\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.editing) {\r\n      return (\r\n        <div className=\"open-add-button\" onClick={() => this.setEditing(true)}>\r\n          <div className=\"main-button\" href=\"#\">\r\n             <div className=\"img\"/>\r\n             <p>Добавить список</p>\r\n          </div>\r\n        </div>  \r\n        ); \r\n    }\r\n\r\n      return (\r\n        <form className=\"card add-task-form\" onSubmit={(e) => this.onSubmit(e)}>\r\n          <input type=\"text\" placeholder=\"Введите название списка\" className=\"task-input\" ref={input => this.textInput = input} />\r\n          <div className=\"buttons-block\">\r\n            <button className=\"button add-button\">Добавить</button>\r\n            <button className=\"button cancel-button\" onClick={() => this.setEditing(false)}>Отмена</button>\r\n          </div>\r\n        </form>\r\n      );\r\n  }\r\n}","import React from 'react';\r\nimport Card from '../Card/Card.js';\r\nimport AddCard from '../AddCard/AddCard.js';\r\nimport styles from './List.css';\r\n\r\n\r\nexport default class List extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n  }\r\n\r\n   \r\n  render() {\r\n    const cards = this.props.cards.map((card, index) => {\r\n      return ( \r\n        <li key={index}>\r\n          <Card {...card} onDragStart={this.props.onDragStart} />\r\n        </li>\r\n      );\r\n    })\r\n      \r\n    return (\r\n      <div>\r\n        <ul className=\"list\" onDragOver={this.props.onDragOver} onDrop={this.props.onDrop}>\r\n          {cards}\r\n          <li className=\"add-list-wrapper\">\r\n            <AddCard formNum={this.props.id} onAdd={this.props.onAdd} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Card from '../Card/Card.js';\r\n\r\n\r\n\r\nexport default function Modal( props ) {\r\n\r\nconst taskText = localStorage.getItem( 'cardText' );\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"modal-screen\">\r\n\t\t\t  \t<div className=\"modal-block\">\r\n\t\t\t  \t\t<div className=\"modal-header\">\r\n\t\t\t\t  \t\t<div className=\"modal-card-text\">\r\n\t\t\t\t  \t\t\t{taskText}\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t\t<NavLink to=\"/board\" activeClassName=\"active\" className=\"modal-link\">\r\n\t\t\t\t  \t\t\t<div className=\"close-img\"/>\r\n\t\t\t\t  \t\t</NavLink>\r\n\t\t\t\t  \t</div>\r\n\t\t\t  \t\t<div className=\"modal-block-text\">\r\n\t\t\t  \t\t\t<a className=\"modal-text\">Описание</a>\r\n\t\t\t  \t\t</div> \r\n\t\t\t  \t\t<button className=\"modal-button\">\r\n\t\t\t  \t\t\t<a className=\"modal-button-text\">Сохранить</a>\r\n\t\t\t  \t\t</button>\r\n\t\t\t  \t</div> \r\n\t\t  \t</div>\r\n\t\t  );\r\n\t}\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Board.css';\r\nimport List from '../List/List.js';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Modal from '../Modal/Modal';\r\n\r\n\r\nexport default class Board extends React.Component {\r\n  constructor( props ) {\r\n\r\n    super( props );\r\n\r\n    if(localStorage.getItem( 'lists' )) {\r\n      const rawLS = localStorage.getItem( 'lists' );\r\n      const parsedLS = JSON.parse( rawLS );\r\n\r\n      this.state = { lists: parsedLS }\r\n\r\n    } else {\r\n\r\n      this.state = {\r\n        lists: [\r\n          {\r\n            title: '{props.cardText}',\r\n            id: 0,\r\n            cards: [{\r\n              listNumber: 0,\r\n              timeId: 'demo-card',\r\n              taskText: ''\r\n            }]\r\n          },\r\n         ]\r\n      }\r\n\r\n      localStorage.setItem( 'lists', JSON.stringify( this.state.lists ))\r\n    }\r\n  }\r\n\r\n  onDragStart = ( e, fromList ) => {\r\n    const dragInfo = {\r\n      taskId: e.currentTarget.id,\r\n      fromList: fromList\r\n    }\r\n  \r\n    localStorage.setItem( 'dragInfo', JSON.stringify( dragInfo ));\r\n  }\r\n\r\n onDragOver = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onDrop = (e, listNum) => {\r\n\r\n    const droppedTask = localStorage.getItem('dragInfo');\r\n    const rawLS = localStorage.getItem('lists');\r\n    const parsedLS = JSON.parse(rawLS);\r\n    const parsedDragInfo = JSON.parse(droppedTask)\r\n    \r\n\r\n    const cardsArray = parsedLS[parsedDragInfo.fromList].cards\r\n    const taskCard = cardsArray.find(card => card.timeId == parsedDragInfo.taskId)\r\n    const indexOfCard = cardsArray.findIndex(card => card.timeId == parsedDragInfo.taskId)\r\n    parsedLS[parsedDragInfo.fromList].cards.splice(indexOfCard, 1)\r\n    parsedLS[listNum].cards.push({...taskCard, listNumber: parseInt(listNum)})\r\n   \r\n\r\n    this.setState({\r\n      lists: parsedLS\r\n    });\r\n    localStorage.setItem('lists', JSON.stringify(parsedLS));\r\n}\r\n\r\n\r\n  addTask( taskText, listNumber ) {\r\n    const rawLS = localStorage.getItem( 'lists' );\r\n    const parsedLS = JSON.parse( rawLS );\r\n\r\n    const newTask = {\r\n      taskText,\r\n      listNumber,\r\n      timeId: new Date().valueOf()\r\n    }\r\n\r\n    parsedLS[listNumber].cards.push( newTask )\r\n\r\n\r\n    this.setState({\r\n      lists: parsedLS\r\n    })\r\n    localStorage.setItem( 'lists', JSON.stringify( parsedLS ))\r\n  \r\n    const cardText = localStorage.getItem( 'cardText' );\r\n  }\r\n\r\n\r\nrender() {\r\n  const lists = this.state.lists.map(( list, index ) => (\r\n    <li className=\"list-wrapper\" key={index}>\r\n      <List {...list} \r\n        onAdd={(taskText, listNumber) => this.addTask( taskText, listNumber )} \r\n        onDragStart={(e, fromList) => this.onDragStart(e, `${list.id}`)}\r\n        onDragOver={( e ) => this.onDragOver( e )} \r\n        onDrop={( e, listNum ) => { this.onDrop(e, `${list.id}`)}}\r\n      />\r\n    </li>\r\n  ));\r\n   \r\n\r\n\r\n  return (\r\n   <Router basename=\"/board\">\r\n    <div className=\"board-screen\">\r\n      <div className=\"modal-card-text\">\r\n         {this.props.boardText}\r\n      </div>\r\n       <NavLink to=\"/\" activeClassName=\"active\" className=\"exit\">\r\n         <div className=\"close-img\"></div>\r\n        </NavLink>\r\n          <Route path=\"/modal\" component={ Modal }/>\r\n            <div className=\"board\">\r\n              <ul className=\"lists\">\r\n                { lists }\r\n              </ul>\r\n            </div>\r\n        </div>\r\n    </Router>\r\n  );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Main.css';\r\nimport BoardList from '../BoardList/BoardList.js';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Board from '../Board/Board';\r\n\r\n\r\nexport default class Main extends React.Component {\r\n  constructor( props ) {\r\n\r\n    super( props );\r\n\r\n    if(localStorage.getItem( 'boards' )) {\r\n      const rawLS = localStorage.getItem( 'boards' );\r\n      const parsedLS = JSON.parse( rawLS );\r\n\r\n      this.state = { boards: parsedLS }\r\n\r\n    } else {\r\n\r\n      this.state = {\r\n        boards: [\r\n          {\r\n            id: 0,\r\n            previews: [{\r\n              listNumber: 0,\r\n              timeId: 'demo-card',\r\n              boardText: ''\r\n            }]\r\n          },\r\n        ]\r\n      }\r\n\r\n      localStorage.setItem( 'boards', JSON.stringify( this.state.boards ))\r\n    }\r\n  }\r\n\r\n\r\n  addTaskCard( boardText, listNumber ) {\r\n    const rawLS = localStorage.getItem( 'boards' );\r\n    const parsedLS = JSON.parse( rawLS );\r\n\r\n    const boardTask = {\r\n      boardText,\r\n      listNumber,\r\n      timeId: new Date().valueOf()\r\n    }\r\n\r\n    parsedLS[listNumber].previews.push( boardTask )\r\n\r\n\r\n    this.setState({\r\n      boards: parsedLS\r\n    })\r\n    localStorage.setItem( 'boards', JSON.stringify( parsedLS ))\r\n  \r\n  }\r\n\r\n\r\nrender() {\r\n  const boards = this.state.boards.map(( boardList, index ) => (\r\n    <li className=\"list-wrapper\" key={index}>\r\n      <BoardList {...boardList} \r\n        onAdd={(boardText, listNumber) => this.addTaskCard( boardText, listNumber )} \r\n      />\r\n    </li>\r\n  ));\r\n   \r\n  return (\r\n    <Router basename=\"/\"> \r\n      <Route path=\"/board\" component={ Board }/>\r\n      <Route path=\"/\" component={ Main }/>\r\n        <div className=\"board\">\r\n          <ul className=\"boards\">\r\n            { boards }\r\n          </ul>\r\n        </div>\r\n    </Router>\r\n  );\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main/Main';\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}