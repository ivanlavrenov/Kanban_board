{"version":3,"sources":["components/Card/Card.js","components/AddCard/AddCard.js","components/List/List.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["Card","props","path","timeId","to","onClick","e","fromList","currentTarget","id","localStorage","setItem","taskText","activeClassName","className","draggable","onDragStart","AddCard","state","editing","event","preventDefault","this","textInput","value","trim","listNumber","formNum","onAdd","setState","onSubmit","type","placeholder","ref","input","setEditing","href","React","Component","List","cards","map","card","index","key","title","onDragOver","onDrop","Modal","getItem","Board","dragInfo","taskId","JSON","stringify","listNum","droppedTask","rawLS","parsedLS","parse","parsedDragInfo","cardsArray","taskCard","find","indexOfCard","findIndex","splice","push","parseInt","lists","newTask","Date","valueOf","list","addTaskCard","basename","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a8898b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Card( props ) {\r\n\r\nlet saveId = (e, fromList) => {\r\n   const cardText = {\r\n      taskId: e.currentTarget.id,\r\n      fromList: fromList\r\n    }\r\n localStorage.setItem('cardText', props.taskText);\r\n}\r\n\r\n\r\nconst path = \"/modal/\" + props.timeId;\r\n\r\n  return (\r\n    <NavLink to={path} onClick={saveId} activeClassName=\"active\" className=\"task-card\" draggable=\"true\" id={[props.timeId]} onDragStart={props.onDragStart}>\r\n  \t\t<div className=\"card-text\">{props.taskText}</div>\r\n    </NavLink>\r\n  ) \r\n};","import React from 'react';\r\nimport styles from './AddCard.css';\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class AddCard extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {\r\n      editing: false\r\n    }\r\n  }\r\n\r\n  onSubmit( event ) {\r\n    event.preventDefault();\r\n    const taskText = this.textInput.value.trim();\r\n    const listNumber = this.props.formNum;\r\n\r\n    if ( taskText && this.props.onAdd ) {\r\n      this.props.onAdd( taskText, listNumber );\r\n    }\r\n    this.textInput.value = '';\r\n  }\r\n\r\n setEditing( editing ) {\r\n    this.setState({\r\n      editing\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.editing) {\r\n      return (\r\n        <div className=\"open-add-button\" onClick={() => this.setEditing(true)}>\r\n          <div className=\"main-button\" href=\"#\">\r\n             <div className=\"img\"/>\r\n             <p>Добавить еще одну карточку</p>\r\n          </div>\r\n        </div>  \r\n        ); \r\n    }\r\n\r\n      return (\r\n        <form className=\"card add-task-form\" onSubmit={(e) => this.onSubmit(e)}>\r\n          <input type=\"text\" placeholder=\"Введите текст карточки\" className=\"task-input\" ref={input => this.textInput = input} />\r\n          <div className=\"buttons-block\">\r\n            <button className=\"button add-button\">Добавить карточку</button>\r\n            <button className=\"button cancel-button\" onClick={() => this.setEditing(false)}><div className=\"close-img\"/>Отмена</button>\r\n          </div>\r\n        </form>\r\n      );\r\n  }\r\n}","import React from 'react';\r\nimport Card from '../Card/Card.js';\r\nimport AddCard from '../AddCard/AddCard.js';\r\nimport styles from './List.css';\r\n\r\n\r\nexport default class List extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n  }\r\n\r\n   \r\n  render() {\r\n    const cards = this.props.cards.map((card, index) => {\r\n      return ( \r\n        <li key={index}>\r\n          <Card {...card} onDragStart={this.props.onDragStart} />\r\n        </li>\r\n      );\r\n    })\r\n      \r\n    return (\r\n      <div>\r\n        <h2 className={`name-header name-${this.props.id}`}>{this.props.title}</h2>\r\n        <ul className=\"list\" onDragOver={this.props.onDragOver} onDrop={this.props.onDrop}>\r\n          {cards}\r\n          <li className=\"add-list-wrapper\">\r\n            <AddCard formNum={this.props.id} onAdd={this.props.onAdd} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport ReactDOM from 'react-dom'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Card from '../Card/Card.js';\r\n\r\n\r\n\r\nexport default function Modal( props ) {\r\n\r\nconst taskText = localStorage.getItem( 'cardText' );\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"modal-screen\">\r\n\t\t\t  \t<div className=\"modal-block\">\r\n\t\t\t  \t\t<div className=\"modal-header\">\r\n\t\t\t\t  \t\t<div className=\"modal-card-text\">\r\n\t\t\t\t  \t\t\t{taskText}\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t\t<NavLink to=\"/\" activeClassName=\"active\" className=\"modal-link\">\r\n\t\t\t\t  \t\t\t<div className=\"close-img\"/>\r\n\t\t\t\t  \t\t</NavLink>\r\n\t\t\t\t  \t</div>\r\n\t\t\t  \t\t<div className=\"modal-block-text\">\r\n\t\t\t  \t\t\t<a className=\"modal-text\">Описание</a>\r\n\t\t\t  \t\t</div> \r\n\t\t\t  \t\t<button className=\"modal-button\">\r\n\t\t\t  \t\t\t<a className=\"modal-button-text\">Сохранить</a>\r\n\t\t\t  \t\t</button>\r\n\t\t\t  \t</div> \r\n\t\t  \t</div>\r\n\t\t  );\r\n\t}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport List from '../List/List.js';\nimport { Route } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport Modal from '../Modal/Modal';\n\n\nexport default class Board extends React.Component {\n  constructor( props ) {\n\n    super( props );\n\n    if(localStorage.getItem( 'lists' )) {\n      const rawLS = localStorage.getItem( 'lists' );\n      const parsedLS = JSON.parse( rawLS );\n\n      this.state = { lists: parsedLS }\n\n    } else {\n\n      this.state = {\n        lists: [\n          {\n            title: 'В работе',\n            id: 0,\n            cards: [{\n              listNumber: 0,\n              timeId: 'demo-card',\n              taskText: ''\n            }]\n          },\n          {\n            title: 'На проверке',\n            id: 1,\n            cards: [{\n              listNumber: 1,\n              timeId: 'demo-card',\n              taskText: ''\n            }]\n          },\n          {\n            title: 'Выполнено',\n            id: 2,\n            cards: [{\n              listNumber: 2,\n              timeId: 'demo-card',\n              taskText: ''\n            }]\n          }\n        ]\n      }\n\n      localStorage.setItem( 'lists', JSON.stringify( this.state.lists ))\n    }\n  }\n\n  onDragStart = ( e, fromList ) => {\n    const dragInfo = {\n      taskId: e.currentTarget.id,\n      fromList: fromList\n    }\n  \n    localStorage.setItem( 'dragInfo', JSON.stringify( dragInfo ));\n  }\n\n onDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  onDrop = (e, listNum) => {\n\n    const droppedTask = localStorage.getItem('dragInfo');\n    const rawLS = localStorage.getItem('lists');\n    const parsedLS = JSON.parse(rawLS);\n    const parsedDragInfo = JSON.parse(droppedTask)\n    \n\n    const cardsArray = parsedLS[parsedDragInfo.fromList].cards\n    const taskCard = cardsArray.find(card => card.timeId == parsedDragInfo.taskId)\n    const indexOfCard = cardsArray.findIndex(card => card.timeId == parsedDragInfo.taskId)\n    parsedLS[parsedDragInfo.fromList].cards.splice(indexOfCard, 1)\n    parsedLS[listNum].cards.push({...taskCard, listNumber: parseInt(listNum)})\n   \n\n    this.setState({\n      lists: parsedLS\n    });\n    localStorage.setItem('lists', JSON.stringify(parsedLS));\n}\n\n\n  addTaskCard( taskText, listNumber ) {\n    const rawLS = localStorage.getItem( 'lists' );\n    const parsedLS = JSON.parse( rawLS );\n\n    const newTask = {\n      taskText,\n      listNumber,\n      timeId: new Date().valueOf()\n    }\n\n    parsedLS[listNumber].cards.push( newTask )\n\n\n    this.setState({\n      lists: parsedLS\n    })\n    localStorage.setItem( 'lists', JSON.stringify( parsedLS ))\n  \n  }\n\n\nrender() {\n  const lists = this.state.lists.map(( list, index ) => (\n    <li className=\"list-wrapper\" key={index}>\n      <List {...list} \n        onAdd={(taskText, listNumber) => this.addTaskCard( taskText, listNumber )} \n        onDragStart={(e, fromList) => this.onDragStart(e, `${list.id}`)}\n        onDragOver={( e ) => this.onDragOver( e )} \n        onDrop={( e, listNum ) => { this.onDrop(e, `${list.id}`)}}\n      />\n    </li>\n  ));\n   \n  return (\n      <HashRouter basename=\"/app\"> \n        <Route path=\"/modal\" component={ Modal }/>\n          <div className=\"board\">\n            <ul className=\"lists\">\n              { lists }\n            </ul>\n        </div>\n    </HashRouter>\n  );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Route } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport Modal from './components/Modal/Modal';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}